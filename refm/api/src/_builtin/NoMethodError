#@since 1.8.0
= class NoMethodError < NameError

定義されていないメソッドの呼び出しが行われたときに発生します。

例:

  self.bar
  # => -:1: undefined method `bar' for #<Object:0x401a6c40> (NoMethodError)

プライベートなインスタンスメソッドを呼び出そうとした場合にも発生します。

例:

  "".puts
  # => NoMethodError: private method `puts' called for "":String

メソッド呼び出しの形式でなければ [[c:NameError]] 例外が発生します。

例:

  bar
  # => -:1: undefined local variable or method `bar' for #<Object:0x401a6c40> (NameError)

== Class Methods

#@since 2.4.0
--- new(error_message = "", name = nil, args = nil, priv = false) -> NoMethodError
#@since 2.6.0
--- new(error_message = "", name = nil, args = nil, receiver:) -> NoMethodError
#@end
#@else
--- new(error_message = "", name = nil, args = nil) -> NoMethodError
#@end

例外オブジェクトを生成して返します。

@param error_message エラーメッセージを表す文字列です

@param name 未定義だったシンボルです

@param args メソッド呼び出しに使われた引数です

#@since 2.4.0
@param priv private なメソッドを呼び出せる形式 (関数形式(レシーバを省略した形式)) で呼ばれたかどうかを指定します
#@end

#@since 2.6.0
@param receiver 原因となったメソッド呼び出しのレシーバです
#@end

例:

  nom = NoMethodError.new("message", "foo", [1,2,3])
  p nom.name
  p nom.args
  
  # => "foo"
  [1, 2, 3]

== Instance Methods

--- args -> [object]

メソッド呼び出しに使われた引数を配列で返します。

例:

  begin
    foobar(1,2,3)
  rescue NoMethodError
    p $!
    p $!.name
    p $!.args
  end
  
  # => #<NoMethodError: undefined method `foobar' for main:Object>
       :foobar
       [1, 2, 3]

#@end
#@since 2.4.0
--- private_call? -> bool

メソッド呼び出しが private なメソッドを呼び出せる形式
(関数形式(レシーバを省略した形式)) で呼ばれたかどうかを返します。
#@end
